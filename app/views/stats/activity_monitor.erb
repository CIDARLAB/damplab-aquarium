<style>
#inventory {
  height: 250px;
}
#jobs {
  height: 150px;
}
</style>

<div>
  <div id='jobs'></div>
  <div id='inventory'></div>
</div>  

<script>

  function Row() {
    this.data = {};
  }

  Row.prototype.update = function(data) {
    this.data = data;
  }

  var offsets = _.range(-35,-1,1);
  rows = [];

  function select(field) {
    var result = [];
    for (var i=0; i<rows.length; i++) {
      if ( field in rows[i].data ) {
        result.push(rows[i].data[field]);
      } else {
        result.push(0);
      }
    }
    return result;
  }

  function display_raw() {
    var div = $('#raw-data').empty();
    for (var i=0; i<rows.length; i++) {
      div.append('<p>' + JSON.stringify(rows[i]) + '</p>');
    }

  }

  var inv = new Highcharts.Chart({

    chart: { type: 'column' , renderTo: 'inventory'},
    title: false,
    xAxis: { categories: select('interval'), labels: { step: 7, rotation: -45, } },
    yAxis: {
        min: 0,
        title: { text: 'Items | Samples' }
    },
    plotOptions: { 
      column: {
        grouping: false,
        shadow: false,
        borderWidth: 0,
        pointPadding: 0,
        groupPadding: 0.025
      },
      animation: false
    },
    series: [
      { name: 'Items', 
        data: select('items'), 
        color: 'rgba(0,255,0,0.5)', 
        pointPadding: 0.0,
        pointPlacement: 0.0 },
      { name: 'Samples', data: select('samples'),
        color: 'rgba(0,0,255,0.5)', 
        pointPadding: 0.0,
        pointPlacement: 0.0 }
    ],
    legend: {
      align: 'right',
      verticalAlign: 'top',
      x: -10,
      y: 10,
      floating: true
    },
    credits: { enabled: false }

  });

  var jobs = new Highcharts.Chart({

    chart: { type: 'column' , renderTo: 'jobs'},
    title: false,
    xAxis: { categories: select('interval'), labels: false },
    yAxis: {
        min: 0,
        title: { text: 'Jobs' }
    },
    plotOptions: { 
      column: {
        grouping: false,
        shadow: false,
        borderWidth: 0,
        pointPadding: 0,
        groupPadding: 0.025,
        stacking: 'normal'
      },
      animation: false
    },
    series: [
      { name: 'Jobs Started', 
        data: select('jobs_started'), 
        color: 'rgba(255,0,0,0.5)', 
        pointPadding: 0.0,
        pointPlacement: 0.0, stack: 'animation' },
      { name: 'Jobs Completed', data: select('jobs_completed'),
        color: 'rgba(220,220,0,0.5)', 
        pointPadding: 0.0,
        pointPlacement: 0.0, stack: 'b' },
      { name: 'Metacols Started', data: select('metacols_started'),
        color: 'rgba(255,0,0,1)', 
        pointPadding: 0.4,
        pointPlacement: 0.0, stack: 'c' },
      { name: 'Metacols Completed', data: select('metacols_completed'),
        color: 'rgba(255,255,0,1)', 
        pointPadding: 0.4,
        pointPlacement: 0.0, stack: 'c' }
    ],
    legend: {
      align: 'right',
      verticalAlign: 'top',
      x: -10,
      y: 10,
      floating: true
    },
    credits: { enabled: false }
    
  });

  $.each(offsets,function() {

    var offset = this;
    var r = new Row();
    rows.push(r);
    
    $.ajax({
      url: "activity_monitor.json?unit=day&period=1&offset="+offset,
    }).done(function(data){
      r.update(data);
      inv.xAxis[0].setCategories(select('interval'));
      inv.series[0].setData(select('items'));
      inv.series[1].setData(select('samples'));
      jobs.series[0].setData(select('jobs_started'));
      jobs.series[1].setData(select('jobs_completed'));
      jobs.series[2].setData(select('metacols_started'));
      jobs.series[3].setData(select('metacols_completed'));
    });

  });

</script>