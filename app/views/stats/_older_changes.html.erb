<div style='border: 1pt solid #aaa; border-radius: 5pt; padding: 5px; margin: 5px;'>


  <h4 style='text-align: center'>Older Changes
    <button id='details-button' class='btn btn-small' onClick="toggle_details()">
      Show
    </button>
  </h4>

  <div id='details' style='display: none'>

    <h4>April 15</h4>
    <ul class='list'> 
      <li>There is now a simple foreach statement in steps.</li>
      <li>You can make tables in steps.</li>
      <li>You can use more than one image in a step. They will show
      up in order in on the left of the page.</li>
      <li>This update introduces tasks and tasks prototypes. You can
      define a task prototype for a give kind of task (such as a
      daily cleanup task, or a Gibson assembly, etc). The prototype
      states what the data structure (an arbitrary json string)
      defines a task of that type. Then you can make as many tasks as
      you want. See the new "Tasks" menu for examples. You can then
      access tasks from within Plankton and Oyster as well as change the
      status of tasks. An example use of tasks is in the Aquarium
      library under production/periodic/tasks.{oy,pl}</li>
      <li>You can now use the <tt>stop</tt> command to stop the protocol.</li>
    </ul>

    <h4>Mar. 17</h4>
    <ul class='list'> 
      <li>New argument type: generic. This type presents the user
      with a text box into which they should put json. You can also
      easily send json from outputs to inputs via metacols.</li>
      <li>Fixed a problem where arguments to metacols used in
      expressions would cause errors.</li>
      <li>Moved some menus around.</li>
    </ul>

    <h4>Mar. 6-7</h4>
    <ul class='list'> 
      <li>Assignments can now have arbitrary left hand sides
      (e.g. a[0][:x][1+y] = 2).</li>
      <li>New hash functions: merge, key, keys, delete.</li>
      <li>Standard math functions now available.</li>
      <li>You can now start jobs scheduled for the future, although
      there is an "Are you sure?" dialog you have to go through.</li>
    </ul>

    <h4>Mar. 3</h4>
    <ul class='list'> 
      <li>Fixed bug where two produces in a row would use the same
      location.</li>
      <li>Items returned by take and produce now include their locations.</li>
    </ul>

    <h4>Feb. 19</h4>
    <ul class='list'> 
      <li>The new input method can be used to read in a json data file.</li>
      <li>You can now define your own functions. See the
      documentation for details and examples.</li>
      <li>New looping construction, "foreach ... in ... end", allows you
      to loop through arrays without bothersome while loop syntax.</li>
      <li>To include another file without arguments, use <pre>require 'file.pl'</pre>which is shorthand for <pre>include 'file.pl' end</pre></li>
      <li>Produce takes an optional parameter, silently, which allows
      you to produce without displaying anything to the user.</li>
      <li>New built in function info(i) that takes an item associated
      with a sample and returns its information. For example, if i is
      a Transformed E. coli Strain, then info(i)[:field2] would be
      the name of the plasmid it contains (since field 2 is where
      that is kept with samples of this type in our inventory).</li>
      <li>When editing and saving changes to samples, the user is not changed.</li>
      <li>Fixed a bug in create new user page.</li>
      <li>Descriptions are shown in lists of samples.</li>
      <li>Fixed a bug where items from a take with quantity more than
      one were incorrectly returned.</li>
      <li>Protocol start/stop logs now record the location of the workstation.</li>
    </ul>


    <h4>Jan. 31</h4>
    <ul class='list'> 
      <li>New function. For an array x, unique(x) returns an array
      that represents the same set, but with no repeats.</li>
      <li>You can now import a spreadsheet of samples.</li>
      <li>The way to filter arguments from the user's
      cart has been changed. Whereas before you would have to name your variable
      something wierd, like Plasmid_id, you now do
<pre class='code'>argument
    pid: sample("Plasmid"), "A helpful message here"
    whatever: sample("Transformed E coli Strain")
end
</pre>
for example. Note that the old style code will still parse, but will
not filter from the cart. You may want to change your code to use the
new scheme, and more reasonable sounding variable names.
      </li>
      <li>Fixed error where unterminated string constants would crash
      the parser.</li>
      <li>Fixed an error where copying the production inventory would
      result in item numbers that are one greater than they should be.</li>
      <li>Fixed bug where files ending in an include statement would crash.</li>
      <li>Rows in tables highlight on mouseover.</li>
    </ul>

    <h4>Jan. 27</h4>
    <ul class='list'> 
      <li>Admins can set a location for the workstation that is
      running the Aquarium, and that location will be sent to MANTA.</li>
      <li>You can now take arrays of items and objects. Plus, the take
      page has been updated to be more compact.</li>
      <li>Items listed as deleted in your cart no longer show up in arguments.</li>
    </ul>

    <h4>Jan. 17-20</h4>
    <ul class='list'>
      <li>Steps can now have timers as in <pre class='code'>timer: { hours: 0, minutes: 3, seconds: 0 }</pre></li>
      <li>Added a splash screen on the metacol launch page that
      prevents users from acidentally pressing the launch button more
      than once and submitting multiple metacols.</li>
      <li>Clicking on protocols or shas now takes you to a summary page of what versions the protocol has and what jobs each version has.</li>
      <li>Fixed several bugs.</li>
    </ul>

    <h4>Jan. 10-11</h4>
    <ul class='list'>
      <li>Fixed a bug where wires with string values were evaluated incorrectly.</li>
      <li>Fixed error on object type page where new item locations
      were not used.</li>
      <li>Simple metacol visualization.</li>
      <li>Can now list all samples by project via the Inventory menu.</li>
      <li>Metacol list filtered by user.</li>
      <li>Can show all pending jobs, not just your own [if you are an admin]</li>
      <li>Changed the home page to show fewer stats, because they tend to take a lot of bandwidth to produce.</li>
      <li>Admins can change other users' passwords.</li>
      <li>Bug fixes in select boxes, editing arguments, changing the
      location of items.</li>
      <li>Removed link to protocol source in pending jobs to prevent
      new users from going astray.</li>
    </ul>

    <h4>Jan. 2-3, 2014</h4>
    <ul class='list'>
      <li>Non admin users cannot start protocols directly in
      production mode.</li>
      <li>New functions for transitions: hours_elapsed and
      minutes_elapsed, which can be used to fire a transition some
      amount of time after a place is started.</li>
      <li>Can now produce an item with a specific sample type using
      using the syntax produce 1 "ObjectType" of "Sample" end.</li>
      <li>Software enforces ObjectTypes to have unique names.</li>
      <li>Fixed bugs in produce where the location wizard was used
      incorrectly.</li>
      <li>Help shows location logic.</li>
      <li>Created and updated dates now show up in item description.</li>
    </ul>

    <h4>Dec. 30-31</h4>
    <ul class='list'>
      <li>Location wizard accepts prefixes of the form FIX:B12.105 (as
      an example) which means the wizard will suggests that items of
      the associated object type should be stored in B12.105.</li>
      <li>Deleted items are no longer truly deleted, but just marked
      as such so that their histories can still be tracked.</li>
      <li>You can get the length of an array and append an element to
      an array in Plankton. See
      the <a href="https://github.com/klavinslab/specifications/blob/master/Languages/Plankton.md">documentation</a>.</li>
      <li>Can now start one instance of a metacol for each user in a
      group. The login user for which the metacol was started is
      available in the aquarium_user variable within oyster.</li>
      <li>The -20C and -80C freezersand the small freezers now have
      location wizards. To make an object type use the wizard, you
      have to set its prefix (on the edit object type page) to M20 or
      M80 respectively.</li>
      <li>Fixed bug in parsing http queries in Plankton (Thanks Nick!)</li>
    </ul>

    <h4>Dec. 23</h4>
    <ul class='list'>
      <li>Plankton and oyster now take array arguments, as in "number
      array", "string array", and "sample array" (no objecttype
      arrays). The argument input UI has been updated to reflect this
      change as well.</li>
      <li>You can edit the arguments of jobs that are scheduled for
      the future (which could be useful for daily minipreps).</li>
      <li>The daemon should crash less often now due to a fix that
      helps it recover from failed communications with the database server.</li>
      <li>Fixed bug where number choices in getdatas were interpreted as strings.</li>
      <li>Fixed bug where choices in numerical getdatas are
      interpreted as strings.</li>
      <li>Fixed bug where operators in strings resulted in parse errors.</li>
    </ul>

    <h4>Dec. 9</h4>
    <ul class='list'>
      <li>New statistics on the main page.</li>
      <li>Lastest changes in the Analytics menu.</li>
      <li>When a protocol is finishsed, aquarium looks for another
      protocol associated with the same metacol for you to do next.</li>
      <li>return_value(i,str) in oyster transitions. See oyster/return_if_not_1.oy.</li>
      <li>Production mode header bar now blicks red if the cameras are on.</li>
    </ul>

    <h4>Dec. 3</h4>
    <ul class='list'>
      <li>Steps in plankton have bullet points.</li>
      <li>Steps in plankton have checkboxes that must be checked by the
      user before the 'next' button is active.</li>
      <li>Take in plankton can have a note field that is displayed before
      the list of items to be taken.</li>
      <li>Runtime errors show offending line numbers.</li>
      <li>You can adjust locations of items in the object_type view 
      page.</li>
      <li>Bigger, brighter, bolder warnings.</li>
      <li>Fixed a bug in oyster protocol submission where the latest start 
      time was computed incorrectly when the desried start time was not now().</li>
    </ul>

    <h4>Nov. 25</h4>
    <ul class='list'>
      <li>Metacols in oyster can now be started from files or github. A
      background process automatically updates them. Metacols are likely
      quite buggy right now.</li>
      <li>Users in the 'admin' group have special privileges.</li>
      <li>The current user's login is shown in the background.</li>
      <li>Job logs show the job status.</li>
      <li>Plankton errors tell you what line number generated the error
      and show that line (usually).</li>
      <li>In use items can be released with the click of a button while
      rehearsing a protocol.</li>
      <li>Cart icon is white for icons already in your cart.</li>
      <li>Modify has new fields: quantity, dquantity, iquantity, iiunse,
      and dinuse.</li>
    </ul>

    <h4>Nov. 15</h4>
    <ul class='list'>
      <li>Users can now be organized into groups.</li>
      <li>Jobs can be submitted to specific groups or users.</li>
      <li>Jobs can be submitted at certain times and certain time
      windows.</li>
      <li>Pending jobs shows jobs in various categories: Running, urgent, pending, future.</li>
    </ul>

    <h4>Nov. 10</h4>
    <ul class='list'>
      <li>Metacol library now included in BioTurk. You can't use it yet,
      except from the command line, but you will be able to soon.</li>
      <li>Bigger buttons for editing the number of items being taken.</li>
      <li>New file format, called Plankton, for
      protocols. See <a href="https://github.com/klavinslab/specifications/blob/master/Languages/Plankton.md">the
      Plankton specification</a> for details.</li>
      <li>There is a basic editor for collections. You can make them,
      edit them, but you can't do anything with them yet. Updates soon.</li>
    </ul>

    <h4>Oct. 23</h4>
    <ul class='list'>
      <li>Images for inventory items now link to Angler.</li>
      <li>Fixed a bug that would render your cart unviewable, and
      protocols taking samples as arguments unstartable due to missing
      items.</li>
    </ul>

    <h4>Oct. 18</h4>
    <ul class='list'>
      <li>Sample fields that link to ther samples can now be empty.</li>
      <li>Samples now have up to eight fields (was six)</li>
      <li>Samples now automatically have a description field.</li>
      <li>You can view you samples, anyone elses samples, or everyone's samples.</li>
      <li>You can store data with a sample. Data can be added directly to
	items on the sample page for that item, or can be specified during a
	&lt;produce&gt;. Items in PDL have a data field now that has this data in
	it. See generic/siso.pdl for an
	example. </li>
      <li>Items can be put into a virtual "cart" (for lack of a better
	word). These items are available in a drop down menu when filling
	in arguments of type sample for protocols.</li>
    </ul>

    <h4>Oct. 15</h4>
    <ul class='list'>
      <li>Fixed a bug that incorrectly cloned the production server data
      and resulted in incorrect links between items, samples, object
      types, and sample types. The db clone will now have exactly the same ids
      as the production server has.</li>
      <li>Somewhat more pronouced color differences between production and
      rehearsal servers.</li>
    </ul>

    <h4>Oct. 14</h4>
    <ul class='list'>
      <li>Improved error reporting. More errors are caught, are better explained, and in many
	cases the offending PDL code is shown.</li>
      <li>Produce now tells you the id of the item you are producing, and
	you can add a note to show on the produce page.</li>
      <li>Every job that touched a particular item is now show, and vice
	verse. Look at the log page after running a protocol to see how.</li>
      <li>In take, you can specify a particular item by using its id.</li>
      <li>Arguments can have type <b>sample</b> or type <b>objecttype</b>
	in addition to the old string and number. For arguments named, for
	example, primer_id, BioTurk will know you want an item id that
	refers to a primer and give you a list of projects and samples to
	select from when starting the protocol.</li>
      <li>When copying the production db to your local copy of bioturk,
	you get the sample types and samples too.</li>
    </ul>

  </div>

</div> 

<script>

  function toggle_details() {
    s = document.getElementById('details').style.display;
    if ( s == 'none' ) {
      document.getElementById('details').style.display = 'block';
      document.getElementById('details-button').innerHTML = 'Hide';      
    } else {
      document.getElementById('details').style.display = 'none';
      document.getElementById('details-button').innerHTML = 'Show';      
    }
  
  }

</script>
